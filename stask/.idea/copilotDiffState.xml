<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/README.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/README.md" />
              <option name="updatedContent" value="# S-TASK - Ứng Dụng Quản Lý Công Việc Cá Nhân&#10;&#10;## Các lỗi đã khắc phục&#10;&#10;### 1. Lỗi TaskReminderReceiver.java&#10;- **Vấn đề**: File bị lỗi cấu trúc nghiêm trọng (code bị trùng lặp, thiếu package)&#10;- **Giải pháp**: Tạo lại file hoàn toàn với cấu trúc đúng&#10;&#10;### 2. Lỗi Theme&#10;- **Vấn đề**: Theme sử dụng `NoActionBar` nhưng MainActivity cần ActionBar&#10;- **Giải pháp**: Đổi từ `Theme.Material3.DayNight.NoActionBar` → `Theme.Material3.DayNight`&#10;&#10;### 3. Lỗi Deprecated API&#10;- **Vấn đề**: `startActivityForResult()` và `onActivityResult()` đã deprecated&#10;- **Giải pháp**: Sử dụng Activity Result API mới với `ActivityResultLauncher`&#10;&#10;## Cách chạy ứng dụng&#10;&#10;### Build từ Terminal&#10;```bash&#10;cd /home/nagih/Workspaces/ptit/mobile/RIPT-Android/stask&#10;./gradlew clean assembleDebug&#10;```&#10;&#10;### Cài đặt APK&#10;```bash&#10;adb install app/build/outputs/apk/debug/app-debug.apk&#10;```&#10;&#10;### Chạy từ Android Studio&#10;1. Mở project trong Android Studio&#10;2. Click nút Run (▶️)&#10;3. Chọn emulator hoặc thiết bị&#10;&#10;## Tính năng đã triển khai&#10;&#10;✅ **Màn hình chính**&#10;- Hiển thị danh sách công việc (RecyclerView)&#10;- Nút FAB (+) để thêm công việc&#10;- Menu: Thêm, Xóa tất cả, Giới thiệu, Lọc&#10;&#10;✅ **Thêm/Sửa công việc**&#10;- Nhập tên, mô tả&#10;- Chọn ngày hết hạn (DatePicker)&#10;- Toast thông báo khi lưu thành công&#10;&#10;✅ **Lưu trữ dữ liệu**&#10;- SharedPreferences với JSON format&#10;- Dữ liệu tồn tại khi mở lại app&#10;&#10;✅ **Thông báo nhắc việc**&#10;- AlarmManager + BroadcastReceiver&#10;- Notification khi đến hạn (9:00 sáng)&#10;&#10;✅ **Bộ lọc (Yêu cầu mở rộng)**&#10;- Tất cả công việc&#10;- Chưa hoàn thành&#10;- Đã hoàn thành&#10;&#10;✅ **Các tính năng khác**&#10;- Checkbox đánh dấu hoàn thành&#10;- Xóa từng công việc&#10;- Xóa tất cả công việc&#10;- Màn hình Giới thiệu&#10;&#10;## Cấu trúc Project&#10;&#10;```&#10;app/src/main/&#10;├── java/com/example/s_task/&#10;│   ├── MainActivity.java              # Màn hình chính&#10;│   ├── AddEditTaskActivity.java       # Thêm/Sửa công việc&#10;│   ├── AboutActivity.java             # Giới thiệu&#10;│   ├── Task.java                      # Model công việc&#10;│   ├── TaskAdapter.java               # RecyclerView Adapter&#10;│   ├── TaskStorage.java               # Lưu trữ SharedPreferences&#10;│   └── TaskReminderReceiver.java      # BroadcastReceiver nhắc việc&#10;├── res/&#10;│   ├── layout/&#10;│   │   ├── activity_main.xml&#10;│   │   ├── activity_add_edit_task.xml&#10;│   │   ├── activity_about.xml&#10;│   │   └── item_task.xml&#10;│   ├── menu/&#10;│   │   └── main_menu.xml&#10;│   └── values/&#10;│       ├── strings.xml&#10;│       └── themes.xml&#10;└── AndroidManifest.xml&#10;```&#10;&#10;## Permissions&#10;&#10;```xml&#10;&lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;&lt;uses-permission android:name=&quot;android.permission.SCHEDULE_EXACT_ALARM&quot; /&gt;&#10;&lt;uses-permission android:name=&quot;android.permission.USE_EXACT_ALARM&quot; /&gt;&#10;```&#10;&#10;## Yêu cầu hệ thống&#10;&#10;- Android SDK: 24+ (Android 7.0+)&#10;- Target SDK: 36&#10;- Compile SDK: 36&#10;- Java Version: 11&#10;&#10;## Người thực hiện&#10;&#10;Sinh viên PTIT - Bài thực hành số 4&#10;&#10;© 2025 S-Task&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/build.gradle">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/build.gradle" />
              <option name="originalContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace 'com.example.s_task'&#10;    compileSdk 36&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.example.s_task&quot;&#10;        minSdk 24&#10;        targetSdk 36&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility JavaVersion.VERSION_11&#10;        targetCompatibility JavaVersion.VERSION_11&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation libs.appcompat&#10;    implementation libs.material&#10;    implementation libs.activity&#10;    implementation libs.constraintlayout&#10;    testImplementation libs.junit&#10;    androidTestImplementation libs.ext.junit&#10;    androidTestImplementation libs.espresso.core&#10;}" />
              <option name="updatedContent" value="plugins {&#10;    alias(libs.plugins.android.application)&#10;}&#10;&#10;android {&#10;    namespace 'com.example.s_task'&#10;    compileSdk 36&#10;&#10;    defaultConfig {&#10;        applicationId &quot;com.example.s_task&quot;&#10;        minSdk 24&#10;        targetSdk 36&#10;        versionCode 1&#10;        versionName &quot;1.0&quot;&#10;&#10;        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;&#10;    }&#10;&#10;    buildTypes {&#10;        release {&#10;            minifyEnabled false&#10;            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'&#10;        }&#10;    }&#10;    compileOptions {&#10;        sourceCompatibility JavaVersion.VERSION_11&#10;        targetCompatibility JavaVersion.VERSION_11&#10;    }&#10;}&#10;&#10;dependencies {&#10;&#10;    implementation libs.appcompat&#10;    implementation libs.material&#10;    implementation libs.activity&#10;    implementation libs.constraintlayout&#10;    implementation 'androidx.recyclerview:recyclerview:1.3.2'&#10;    implementation 'androidx.cardview:cardview:1.0.0'&#10;    testImplementation libs.junit&#10;    androidTestImplementation libs.ext.junit&#10;    androidTestImplementation libs.espresso.core&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/AndroidManifest.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/AndroidManifest.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.Stask&quot;&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;&#10;    &lt;uses-permission android:name=&quot;android.permission.POST_NOTIFICATIONS&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.SCHEDULE_EXACT_ALARM&quot; /&gt;&#10;    &lt;uses-permission android:name=&quot;android.permission.USE_EXACT_ALARM&quot; /&gt;&#10;&#10;    &lt;application&#10;        android:allowBackup=&quot;true&quot;&#10;        android:dataExtractionRules=&quot;@xml/data_extraction_rules&quot;&#10;        android:fullBackupContent=&quot;@xml/backup_rules&quot;&#10;        android:icon=&quot;@mipmap/ic_launcher&quot;&#10;        android:label=&quot;@string/app_name&quot;&#10;        android:roundIcon=&quot;@mipmap/ic_launcher_round&quot;&#10;        android:supportsRtl=&quot;true&quot;&#10;        android:theme=&quot;@style/Theme.Stask&quot;&gt;&#10;        &lt;activity&#10;            android:name=&quot;.MainActivity&quot;&#10;            android:exported=&quot;true&quot;&gt;&#10;            &lt;intent-filter&gt;&#10;                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;&#10;&#10;                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;&#10;            &lt;/intent-filter&gt;&#10;        &lt;/activity&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.AddEditTaskActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot; /&gt;&#10;&#10;        &lt;activity&#10;            android:name=&quot;.AboutActivity&quot;&#10;            android:exported=&quot;false&quot;&#10;            android:parentActivityName=&quot;.MainActivity&quot; /&gt;&#10;&#10;        &lt;receiver&#10;            android:name=&quot;.TaskReminderReceiver&quot;&#10;            android:enabled=&quot;true&quot;&#10;            android:exported=&quot;false&quot; /&gt;&#10;&#10;    &lt;/application&gt;&#10;&#10;&lt;/manifest&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/AboutActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/AboutActivity.java" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import android.os.Bundle;&#10;import android.widget.TextView;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;public class AboutActivity extends AppCompatActivity {&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_about);&#10;&#10;        setTitle(&quot;Giới Thiệu&quot;);&#10;&#10;        TextView textViewInfo = findViewById(R.id.textViewInfo);&#10;        &#10;        String info = &quot;S-TASK - Quản Lý Công Việc Cá Nhân\n\n&quot; +&#10;                &quot;Phiên bản: 1.0\n\n&quot; +&#10;                &quot;Mô tả:\n&quot; +&#10;                &quot;Ứng dụng giúp bạn quản lý công việc cá nhân hiệu quả với các tính năng:\n&quot; +&#10;                &quot;• Thêm, sửa, xóa công việc\n&quot; +&#10;                &quot;• Đánh dấu hoàn thành\n&quot; +&#10;                &quot;• Nhắc việc đúng hạn\n&quot; +&#10;                &quot;• Lưu trữ dữ liệu tự động\n\n&quot; +&#10;                &quot;Người thực hiện:\n&quot; +&#10;                &quot;Sinh viên PTIT\n&quot; +&#10;                &quot;Bài thực hành số 4\n\n&quot; +&#10;                &quot;© 2025 S-Task. All rights reserved.&quot;;&#10;        &#10;        textViewInfo.setText(info);&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/AddEditTaskActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/AddEditTaskActivity.java" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import android.app.AlarmManager;&#10;import android.app.DatePickerDialog;&#10;import android.app.PendingIntent;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.widget.Button;&#10;import android.widget.EditText;&#10;import android.widget.Toast;&#10;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import java.text.SimpleDateFormat;&#10;import java.util.Calendar;&#10;import java.util.Locale;&#10;import java.util.UUID;&#10;&#10;public class AddEditTaskActivity extends AppCompatActivity {&#10;    private EditText editTextName;&#10;    private EditText editTextDescription;&#10;    private EditText editTextDueDate;&#10;    private Button buttonSave;&#10;    private Button buttonSelectDate;&#10;&#10;    private Task editingTask;&#10;    private Calendar selectedDate;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_add_edit_task);&#10;&#10;        // Initialize views&#10;        editTextName = findViewById(R.id.editTextName);&#10;        editTextDescription = findViewById(R.id.editTextDescription);&#10;        editTextDueDate = findViewById(R.id.editTextDueDate);&#10;        buttonSave = findViewById(R.id.buttonSave);&#10;        buttonSelectDate = findViewById(R.id.buttonSelectDate);&#10;&#10;        selectedDate = Calendar.getInstance();&#10;&#10;        // Check if editing existing task&#10;        Intent intent = getIntent();&#10;        if (intent.hasExtra(&quot;task&quot;)) {&#10;            editingTask = (Task) intent.getSerializableExtra(&quot;task&quot;);&#10;            setTitle(&quot;Sửa Công Việc&quot;);&#10;            populateFields();&#10;        } else {&#10;            setTitle(&quot;Thêm Công Việc&quot;);&#10;        }&#10;&#10;        // Date picker&#10;        buttonSelectDate.setOnClickListener(v -&gt; showDatePicker());&#10;        editTextDueDate.setOnClickListener(v -&gt; showDatePicker());&#10;&#10;        // Save button&#10;        buttonSave.setOnClickListener(v -&gt; saveTask());&#10;    }&#10;&#10;    private void showDatePicker() {&#10;        DatePickerDialog datePickerDialog = new DatePickerDialog(&#10;                this,&#10;                (view, year, month, dayOfMonth) -&gt; {&#10;                    selectedDate.set(Calendar.YEAR, year);&#10;                    selectedDate.set(Calendar.MONTH, month);&#10;                    selectedDate.set(Calendar.DAY_OF_MONTH, dayOfMonth);&#10;                    &#10;                    SimpleDateFormat sdf = new SimpleDateFormat(&quot;dd/MM/yyyy&quot;, Locale.getDefault());&#10;                    editTextDueDate.setText(sdf.format(selectedDate.getTime()));&#10;                },&#10;                selectedDate.get(Calendar.YEAR),&#10;                selectedDate.get(Calendar.MONTH),&#10;                selectedDate.get(Calendar.DAY_OF_MONTH)&#10;        );&#10;        datePickerDialog.show();&#10;    }&#10;&#10;    private void populateFields() {&#10;        if (editingTask != null) {&#10;            editTextName.setText(editingTask.getName());&#10;            editTextDescription.setText(editingTask.getDescription());&#10;            editTextDueDate.setText(editingTask.getDueDate());&#10;        }&#10;    }&#10;&#10;    private void saveTask() {&#10;        String name = editTextName.getText().toString().trim();&#10;        String description = editTextDescription.getText().toString().trim();&#10;        String dueDate = editTextDueDate.getText().toString().trim();&#10;&#10;        if (name.isEmpty()) {&#10;            Toast.makeText(this, &quot;Vui lòng nhập tên công việc&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        if (dueDate.isEmpty()) {&#10;            Toast.makeText(this, &quot;Vui lòng chọn ngày hết hạn&quot;, Toast.LENGTH_SHORT).show();&#10;            return;&#10;        }&#10;&#10;        Task task;&#10;        if (editingTask != null) {&#10;            task = editingTask;&#10;            task.setName(name);&#10;            task.setDescription(description);&#10;            task.setDueDate(dueDate);&#10;        } else {&#10;            String id = UUID.randomUUID().toString();&#10;            task = new Task(id, name, description, dueDate);&#10;        }&#10;&#10;        // Schedule notification&#10;        scheduleNotification(task);&#10;&#10;        // Return result&#10;        Intent resultIntent = new Intent();&#10;        resultIntent.putExtra(&quot;task&quot;, task);&#10;        setResult(RESULT_OK, resultIntent);&#10;&#10;        Toast.makeText(this, &quot;Lưu công việc thành công!&quot;, Toast.LENGTH_SHORT).show();&#10;        finish();&#10;    }&#10;&#10;    private void scheduleNotification(Task task) {&#10;        try {&#10;            AlarmManager alarmManager = (AlarmManager) getSystemService(ALARM_SERVICE);&#10;            Intent intent = new Intent(this, TaskReminderReceiver.class);&#10;            intent.putExtra(&quot;task_name&quot;, task.getName());&#10;            intent.putExtra(&quot;task_id&quot;, task.getId());&#10;&#10;            PendingIntent pendingIntent = PendingIntent.getBroadcast(&#10;                    this,&#10;                    task.getId().hashCode(),&#10;                    intent,&#10;                    PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE&#10;            );&#10;&#10;            // Set alarm for the selected date at 9:00 AM&#10;            Calendar alarmTime = (Calendar) selectedDate.clone();&#10;            alarmTime.set(Calendar.HOUR_OF_DAY, 9);&#10;            alarmTime.set(Calendar.MINUTE, 0);&#10;            alarmTime.set(Calendar.SECOND, 0);&#10;&#10;            if (alarmTime.getTimeInMillis() &gt; System.currentTimeMillis()) {&#10;                alarmManager.setExact(AlarmManager.RTC_WAKEUP, alarmTime.getTimeInMillis(), pendingIntent);&#10;            }&#10;        } catch (Exception e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/MainActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/MainActivity.java" />
              <option name="originalContent" value="package com.example.s_task;&#10;&#10;import android.os.Bundle;&#10;&#10;import androidx.activity.EdgeToEdge;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;&#10;public class MainActivity extends AppCompatActivity {&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        EdgeToEdge.enable(this);&#10;        setContentView(R.layout.activity_main);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;    }&#10;}" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import android.content.Intent;&#10;import android.os.Bundle;&#10;import android.view.Menu;&#10;import android.view.MenuItem;&#10;import android.view.View;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;&#10;import androidx.activity.result.ActivityResultLauncher;&#10;import androidx.activity.result.contract.ActivityResultContracts;&#10;import androidx.annotation.NonNull;&#10;import androidx.appcompat.app.AlertDialog;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import androidx.core.graphics.Insets;&#10;import androidx.core.view.ViewCompat;&#10;import androidx.core.view.WindowInsetsCompat;&#10;import androidx.recyclerview.widget.LinearLayoutManager;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import com.google.android.material.floatingactionbutton.FloatingActionButton;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;import java.util.stream.Collectors;&#10;&#10;public class MainActivity extends AppCompatActivity implements TaskAdapter.OnTaskClickListener {&#10;    private RecyclerView recyclerView;&#10;    private TaskAdapter taskAdapter;&#10;    private List&lt;Task&gt; taskList;&#10;    private List&lt;Task&gt; filteredTaskList;&#10;    private FloatingActionButton fabAdd;&#10;    private TextView textViewEmpty;&#10;    private TaskStorage taskStorage;&#10;&#10;    private String currentFilter = &quot;all&quot;;&#10;    private boolean isEditMode = false;&#10;&#10;    private ActivityResultLauncher&lt;Intent&gt; addTaskLauncher;&#10;    private ActivityResultLauncher&lt;Intent&gt; editTaskLauncher;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_main);&#10;        ViewCompat.setOnApplyWindowInsetsListener(findViewById(R.id.main), (v, insets) -&gt; {&#10;            Insets systemBars = insets.getInsets(WindowInsetsCompat.Type.systemBars());&#10;            v.setPadding(systemBars.left, systemBars.top, systemBars.right, systemBars.bottom);&#10;            return insets;&#10;        });&#10;&#10;        // Initialize Activity Result Launchers&#10;        addTaskLauncher = registerForActivityResult(&#10;                new ActivityResultContracts.StartActivityForResult(),&#10;                result -&gt; {&#10;                    if (result.getResultCode() == RESULT_OK &amp;&amp; result.getData() != null) {&#10;                        Task task = (Task) result.getData().getSerializableExtra(&quot;task&quot;);&#10;                        if (task != null) {&#10;                            taskList.add(task);&#10;                            saveTasks();&#10;                            applyFilter();&#10;                        }&#10;                    }&#10;                });&#10;&#10;        editTaskLauncher = registerForActivityResult(&#10;                new ActivityResultContracts.StartActivityForResult(),&#10;                result -&gt; {&#10;                    if (result.getResultCode() == RESULT_OK &amp;&amp; result.getData() != null) {&#10;                        Task task = (Task) result.getData().getSerializableExtra(&quot;task&quot;);&#10;                        if (task != null) {&#10;                            for (int i = 0; i &lt; taskList.size(); i++) {&#10;                                if (taskList.get(i).getId().equals(task.getId())) {&#10;                                    taskList.set(i, task);&#10;                                    break;&#10;                                }&#10;                            }&#10;                            saveTasks();&#10;                            applyFilter();&#10;                        }&#10;                    }&#10;                });&#10;&#10;        // Initialize views&#10;        recyclerView = findViewById(R.id.recyclerViewTasks);&#10;        fabAdd = findViewById(R.id.fabAdd);&#10;        textViewEmpty = findViewById(R.id.textViewEmpty);&#10;&#10;        // Initialize storage&#10;        taskStorage = new TaskStorage(this);&#10;&#10;        // Load tasks&#10;        taskList = new ArrayList&lt;&gt;();&#10;        filteredTaskList = new ArrayList&lt;&gt;();&#10;        loadTasks();&#10;&#10;        // Setup RecyclerView&#10;        recyclerView.setLayoutManager(new LinearLayoutManager(this));&#10;        taskAdapter = new TaskAdapter(filteredTaskList, this);&#10;        recyclerView.setAdapter(taskAdapter);&#10;&#10;        // FAB click listener&#10;        fabAdd.setOnClickListener(v -&gt; {&#10;            Intent intent = new Intent(MainActivity.this, AddEditTaskActivity.class);&#10;            addTaskLauncher.launch(intent);&#10;        });&#10;&#10;        updateEmptyView();&#10;    }&#10;&#10;    @Override&#10;    public boolean onCreateOptionsMenu(Menu menu) {&#10;        getMenuInflater().inflate(R.menu.main_menu, menu);&#10;        return true;&#10;    }&#10;&#10;    @Override&#10;    public boolean onOptionsItemSelected(@NonNull MenuItem item) {&#10;        int id = item.getItemId();&#10;&#10;        if (id == R.id.menu_add) {&#10;            Intent intent = new Intent(MainActivity.this, AddEditTaskActivity.class);&#10;            addTaskLauncher.launch(intent);&#10;            return true;&#10;        } else if (id == R.id.menu_delete_all) {&#10;            showDeleteAllDialog();&#10;            return true;&#10;        } else if (id == R.id.menu_about) {&#10;            Intent intent = new Intent(MainActivity.this, AboutActivity.class);&#10;            startActivity(intent);&#10;            return true;&#10;        } else if (id == R.id.menu_filter_all) {&#10;            currentFilter = &quot;all&quot;;&#10;            applyFilter();&#10;            return true;&#10;        } else if (id == R.id.menu_filter_completed) {&#10;            currentFilter = &quot;completed&quot;;&#10;            applyFilter();&#10;            return true;&#10;        } else if (id == R.id.menu_filter_pending) {&#10;            currentFilter = &quot;pending&quot;;&#10;            applyFilter();&#10;            return true;&#10;        }&#10;&#10;        return super.onOptionsItemSelected(item);&#10;    }&#10;&#10;    private void showDeleteAllDialog() {&#10;        new AlertDialog.Builder(this)&#10;                .setTitle(&quot;Xóa tất cả&quot;)&#10;                .setMessage(&quot;Bạn có chắc muốn xóa tất cả công việc?&quot;)&#10;                .setPositiveButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                    taskList.clear();&#10;                    saveTasks();&#10;                    applyFilter();&#10;                    Toast.makeText(this, &quot;Đã xóa tất cả công việc&quot;, Toast.LENGTH_SHORT).show();&#10;                })&#10;                .setNegativeButton(&quot;Hủy&quot;, null)&#10;                .show();&#10;    }&#10;&#10;    private void applyFilter() {&#10;        filteredTaskList.clear();&#10;&#10;        if (currentFilter.equals(&quot;all&quot;)) {&#10;            filteredTaskList.addAll(taskList);&#10;            setTitle(&quot;S-Task - Tất cả&quot;);&#10;        } else if (currentFilter.equals(&quot;completed&quot;)) {&#10;            filteredTaskList.addAll(taskList.stream()&#10;                    .filter(Task::isCompleted)&#10;                    .collect(Collectors.toList()));&#10;            setTitle(&quot;S-Task - Đã hoàn thành&quot;);&#10;        } else if (currentFilter.equals(&quot;pending&quot;)) {&#10;            filteredTaskList.addAll(taskList.stream()&#10;                    .filter(task -&gt; !task.isCompleted())&#10;                    .collect(Collectors.toList()));&#10;            setTitle(&quot;S-Task - Chưa hoàn thành&quot;);&#10;        }&#10;&#10;        taskAdapter.updateTasks(filteredTaskList);&#10;        updateEmptyView();&#10;    }&#10;&#10;    private void loadTasks() {&#10;        taskList.clear();&#10;        taskList.addAll(taskStorage.loadTasks());&#10;        applyFilter();&#10;    }&#10;&#10;    private void saveTasks() {&#10;        taskStorage.saveTasks(taskList);&#10;    }&#10;&#10;    private void updateEmptyView() {&#10;        if (filteredTaskList.isEmpty()) {&#10;            textViewEmpty.setVisibility(View.VISIBLE);&#10;            recyclerView.setVisibility(View.GONE);&#10;        } else {&#10;            textViewEmpty.setVisibility(View.GONE);&#10;            recyclerView.setVisibility(View.VISIBLE);&#10;        }&#10;    }&#10;&#10;    @Override&#10;    public void onTaskClick(Task task, int position) {&#10;        Intent intent = new Intent(MainActivity.this, AddEditTaskActivity.class);&#10;        intent.putExtra(&quot;task&quot;, task);&#10;        editTaskLauncher.launch(intent);&#10;    }&#10;&#10;    @Override&#10;    public void onTaskDelete(Task task, int position) {&#10;        new AlertDialog.Builder(this)&#10;                .setTitle(&quot;Xóa công việc&quot;)&#10;                .setMessage(&quot;Bạn có chắc muốn xóa công việc này?&quot;)&#10;                .setPositiveButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                    taskList.remove(task);&#10;                    saveTasks();&#10;                    applyFilter();&#10;                    Toast.makeText(this, &quot;Đã xóa công việc&quot;, Toast.LENGTH_SHORT).show();&#10;                })&#10;                .setNegativeButton(&quot;Hủy&quot;, null)&#10;                .show();&#10;    }&#10;&#10;    @Override&#10;    public void onTaskStatusChanged(Task task, int position) {&#10;        saveTasks();&#10;        Toast.makeText(this, task.isCompleted() ? &quot;Đã đánh dấu hoàn thành&quot; : &quot;Đã đánh dấu chưa hoàn thành&quot;,&#10;                Toast.LENGTH_SHORT).show();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/Task.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/Task.java" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import java.io.Serializable;&#10;&#10;public class Task implements Serializable {&#10;    private String id;&#10;    private String name;&#10;    private String description;&#10;    private String dueDate;&#10;    private boolean completed;&#10;&#10;    public Task(String id, String name, String description, String dueDate) {&#10;        this.id = id;&#10;        this.name = name;&#10;        this.description = description;&#10;        this.dueDate = dueDate;&#10;        this.completed = false;&#10;    }&#10;&#10;    public String getId() {&#10;        return id;&#10;    }&#10;&#10;    public void setId(String id) {&#10;        this.id = id;&#10;    }&#10;&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    public String getDescription() {&#10;        return description;&#10;    }&#10;&#10;    public void setDescription(String description) {&#10;        this.description = description;&#10;    }&#10;&#10;    public String getDueDate() {&#10;        return dueDate;&#10;    }&#10;&#10;    public void setDueDate(String dueDate) {&#10;        this.dueDate = dueDate;&#10;    }&#10;&#10;    public boolean isCompleted() {&#10;        return completed;&#10;    }&#10;&#10;    public void setCompleted(boolean completed) {&#10;        this.completed = completed;&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/TaskAdapter.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/TaskAdapter.java" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import android.graphics.Paint;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.view.ViewGroup;&#10;import android.widget.CheckBox;&#10;import android.widget.ImageButton;&#10;import android.widget.TextView;&#10;&#10;import androidx.annotation.NonNull;&#10;import androidx.recyclerview.widget.RecyclerView;&#10;&#10;import java.util.List;&#10;&#10;public class TaskAdapter extends RecyclerView.Adapter&lt;TaskAdapter.TaskViewHolder&gt; {&#10;    private List&lt;Task&gt; taskList;&#10;    private OnTaskClickListener listener;&#10;&#10;    public interface OnTaskClickListener {&#10;        void onTaskClick(Task task, int position);&#10;        void onTaskDelete(Task task, int position);&#10;        void onTaskStatusChanged(Task task, int position);&#10;    }&#10;&#10;    public TaskAdapter(List&lt;Task&gt; taskList, OnTaskClickListener listener) {&#10;        this.taskList = taskList;&#10;        this.listener = listener;&#10;    }&#10;&#10;    @NonNull&#10;    @Override&#10;    public TaskViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {&#10;        View view = LayoutInflater.from(parent.getContext())&#10;                .inflate(R.layout.item_task, parent, false);&#10;        return new TaskViewHolder(view);&#10;    }&#10;&#10;    @Override&#10;    public void onBindViewHolder(@NonNull TaskViewHolder holder, int position) {&#10;        Task task = taskList.get(position);&#10;        holder.bind(task);&#10;    }&#10;&#10;    @Override&#10;    public int getItemCount() {&#10;        return taskList.size();&#10;    }&#10;&#10;    public void updateTasks(List&lt;Task&gt; newTasks) {&#10;        this.taskList = newTasks;&#10;        notifyDataSetChanged();&#10;    }&#10;&#10;    class TaskViewHolder extends RecyclerView.ViewHolder {&#10;        private CheckBox checkBoxCompleted;&#10;        private TextView textViewName;&#10;        private TextView textViewDescription;&#10;        private TextView textViewDueDate;&#10;        private ImageButton buttonDelete;&#10;&#10;        public TaskViewHolder(@NonNull View itemView) {&#10;            super(itemView);&#10;            checkBoxCompleted = itemView.findViewById(R.id.checkBoxCompleted);&#10;            textViewName = itemView.findViewById(R.id.textViewName);&#10;            textViewDescription = itemView.findViewById(R.id.textViewDescription);&#10;            textViewDueDate = itemView.findViewById(R.id.textViewDueDate);&#10;            buttonDelete = itemView.findViewById(R.id.buttonDelete);&#10;        }&#10;&#10;        public void bind(Task task) {&#10;            textViewName.setText(task.getName());&#10;            textViewDescription.setText(task.getDescription());&#10;            textViewDueDate.setText(&quot;Hạn: &quot; + task.getDueDate());&#10;            checkBoxCompleted.setChecked(task.isCompleted());&#10;&#10;            // Strike through text if completed&#10;            if (task.isCompleted()) {&#10;                textViewName.setPaintFlags(textViewName.getPaintFlags() | Paint.STRIKE_THRU_TEXT_FLAG);&#10;            } else {&#10;                textViewName.setPaintFlags(textViewName.getPaintFlags() &amp; (~Paint.STRIKE_THRU_TEXT_FLAG));&#10;            }&#10;&#10;            // Click to edit&#10;            itemView.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onTaskClick(task, getAdapterPosition());&#10;                }&#10;            });&#10;&#10;            // Delete button&#10;            buttonDelete.setOnClickListener(v -&gt; {&#10;                if (listener != null) {&#10;                    listener.onTaskDelete(task, getAdapterPosition());&#10;                }&#10;            });&#10;&#10;            // Checkbox for completion status&#10;            checkBoxCompleted.setOnClickListener(v -&gt; {&#10;                task.setCompleted(checkBoxCompleted.isChecked());&#10;                if (listener != null) {&#10;                    listener.onTaskStatusChanged(task, getAdapterPosition());&#10;                }&#10;                notifyItemChanged(getAdapterPosition());&#10;            });&#10;        }&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/TaskReminderReceiver.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/TaskReminderReceiver.java" />
              <option name="originalContent" value="&#10;" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import android.app.NotificationChannel;&#10;import android.app.NotificationManager;&#10;import android.app.PendingIntent;&#10;import android.content.BroadcastReceiver;&#10;import android.content.Context;&#10;import android.content.Intent;&#10;import android.os.Build;&#10;&#10;import androidx.core.app.NotificationCompat;&#10;&#10;public class TaskReminderReceiver extends BroadcastReceiver {&#10;    private static final String CHANNEL_ID = &quot;task_reminder_channel&quot;;&#10;    private static final int NOTIFICATION_ID = 1001;&#10;&#10;    @Override&#10;    public void onReceive(Context context, Intent intent) {&#10;        String taskName = intent.getStringExtra(&quot;task_name&quot;);&#10;&#10;        createNotificationChannel(context);&#10;        showNotification(context, taskName);&#10;    }&#10;&#10;    private void createNotificationChannel(Context context) {&#10;        if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.O) {&#10;            CharSequence name = &quot;Task Reminders&quot;;&#10;            String description = &quot;Nhắc nhở công việc&quot;;&#10;            int importance = NotificationManager.IMPORTANCE_HIGH;&#10;            NotificationChannel channel = new NotificationChannel(CHANNEL_ID, name, importance);&#10;            channel.setDescription(description);&#10;&#10;            NotificationManager notificationManager = context.getSystemService(NotificationManager.class);&#10;            if (notificationManager != null) {&#10;                notificationManager.createNotificationChannel(channel);&#10;            }&#10;        }&#10;    }&#10;&#10;    private void showNotification(Context context, String taskName) {&#10;        Intent intent = new Intent(context, MainActivity.class);&#10;        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);&#10;        PendingIntent pendingIntent = PendingIntent.getActivity(&#10;                context,&#10;                0,&#10;                intent,&#10;                PendingIntent.FLAG_UPDATE_CURRENT | PendingIntent.FLAG_IMMUTABLE&#10;        );&#10;&#10;        NotificationCompat.Builder builder = new NotificationCompat.Builder(context, CHANNEL_ID)&#10;                .setSmallIcon(android.R.drawable.ic_dialog_info)&#10;                .setContentTitle(&quot;Nhắc việc - S-Task&quot;)&#10;                .setContentText(taskName + &quot; đã đến hạn!&quot;)&#10;                .setPriority(NotificationCompat.PRIORITY_HIGH)&#10;                .setContentIntent(pendingIntent)&#10;                .setAutoCancel(true);&#10;&#10;        NotificationManager notificationManager =&#10;                (NotificationManager) context.getSystemService(Context.NOTIFICATION_SERVICE);&#10;        if (notificationManager != null) {&#10;            notificationManager.notify(NOTIFICATION_ID, builder.build());&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/example/s_task/TaskStorage.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/example/s_task/TaskStorage.java" />
              <option name="updatedContent" value="package com.example.s_task;&#10;&#10;import android.content.Context;&#10;import android.content.SharedPreferences;&#10;&#10;import org.json.JSONArray;&#10;import org.json.JSONException;&#10;import org.json.JSONObject;&#10;&#10;import java.util.ArrayList;&#10;import java.util.List;&#10;&#10;public class TaskStorage {&#10;    private static final String PREFS_NAME = &quot;TaskPrefs&quot;;&#10;    private static final String KEY_TASKS = &quot;tasks&quot;;&#10;    private SharedPreferences sharedPreferences;&#10;&#10;    public TaskStorage(Context context) {&#10;        sharedPreferences = context.getSharedPreferences(PREFS_NAME, Context.MODE_PRIVATE);&#10;    }&#10;&#10;    public void saveTasks(List&lt;Task&gt; tasks) {&#10;        try {&#10;            JSONArray jsonArray = new JSONArray();&#10;            for (Task task : tasks) {&#10;                JSONObject jsonObject = new JSONObject();&#10;                jsonObject.put(&quot;id&quot;, task.getId());&#10;                jsonObject.put(&quot;name&quot;, task.getName());&#10;                jsonObject.put(&quot;description&quot;, task.getDescription());&#10;                jsonObject.put(&quot;dueDate&quot;, task.getDueDate());&#10;                jsonObject.put(&quot;completed&quot;, task.isCompleted());&#10;                jsonArray.put(jsonObject);&#10;            }&#10;&#10;            SharedPreferences.Editor editor = sharedPreferences.edit();&#10;            editor.putString(KEY_TASKS, jsonArray.toString());&#10;            editor.apply();&#10;        } catch (JSONException e) {&#10;            e.printStackTrace();&#10;        }&#10;    }&#10;&#10;    public List&lt;Task&gt; loadTasks() {&#10;        List&lt;Task&gt; tasks = new ArrayList&lt;&gt;();&#10;        String jsonString = sharedPreferences.getString(KEY_TASKS, &quot;&quot;);&#10;&#10;        if (!jsonString.isEmpty()) {&#10;            try {&#10;                JSONArray jsonArray = new JSONArray(jsonString);&#10;                for (int i = 0; i &lt; jsonArray.length(); i++) {&#10;                    JSONObject jsonObject = jsonArray.getJSONObject(i);&#10;                    Task task = new Task(&#10;                            jsonObject.getString(&quot;id&quot;),&#10;                            jsonObject.getString(&quot;name&quot;),&#10;                            jsonObject.getString(&quot;description&quot;),&#10;                            jsonObject.getString(&quot;dueDate&quot;)&#10;                    );&#10;                    task.setCompleted(jsonObject.getBoolean(&quot;completed&quot;));&#10;                    tasks.add(task);&#10;                }&#10;            } catch (JSONException e) {&#10;                e.printStackTrace();&#10;            }&#10;        }&#10;&#10;        return tasks;&#10;    }&#10;&#10;    public void clearAllTasks() {&#10;        SharedPreferences.Editor editor = sharedPreferences.edit();&#10;        editor.remove(KEY_TASKS);&#10;        editor.apply();&#10;    }&#10;}&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_about.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_about.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;24dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:gravity=&quot;center_horizontal&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:layout_width=&quot;120dp&quot;&#10;            android:layout_height=&quot;120dp&quot;&#10;            android:src=&quot;@mipmap/ic_launcher&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&#10;            android:contentDescription=&quot;App Icon&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;S-TASK&quot;&#10;            android:textSize=&quot;32sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginTop=&quot;16dp&quot;&#10;            android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/textViewInfo&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&#10;            android:lineSpacingMultiplier=&quot;1.2&quot;&#10;            android:textAlignment=&quot;textStart&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_add_edit_task.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_add_edit_task.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;ScrollView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    android:padding=&quot;16dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Tên công việc&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginTop=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/editTextName&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Nhập tên công việc&quot;&#10;            android:inputType=&quot;text&quot;&#10;            android:minHeight=&quot;48dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Mô tả&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;EditText&#10;            android:id=&quot;@+id/editTextDescription&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:hint=&quot;Nhập mô tả chi tiết&quot;&#10;            android:inputType=&quot;textMultiLine&quot;&#10;            android:lines=&quot;4&quot;&#10;            android:gravity=&quot;top&quot;&#10;            android:minHeight=&quot;100dp&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Ngày hết hạn&quot;&#10;            android:textSize=&quot;16sp&quot;&#10;            android:textStyle=&quot;bold&quot;&#10;            android:layout_marginTop=&quot;16dp&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;horizontal&quot;&gt;&#10;&#10;            &lt;EditText&#10;                android:id=&quot;@+id/editTextDueDate&quot;&#10;                android:layout_width=&quot;0dp&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:layout_weight=&quot;1&quot;&#10;                android:hint=&quot;Chọn ngày&quot;&#10;                android:inputType=&quot;none&quot;&#10;                android:focusable=&quot;false&quot;&#10;                android:minHeight=&quot;48dp&quot; /&gt;&#10;&#10;            &lt;Button&#10;                android:id=&quot;@+id/buttonSelectDate&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Chọn ngày&quot;&#10;                android:layout_marginStart=&quot;8dp&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;Button&#10;            android:id=&quot;@+id/buttonSave&quot;&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Lưu&quot;&#10;            android:layout_marginTop=&quot;24dp&quot;&#10;            android:textSize=&quot;16sp&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/ScrollView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_main.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;TextView&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Hello World!&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.MainActivity&quot;&gt;&#10;&#10;    &lt;androidx.recyclerview.widget.RecyclerView&#10;        android:id=&quot;@+id/recyclerViewTasks&quot;&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;match_parent&quot;&#10;        android:padding=&quot;8dp&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;TextView&#10;        android:id=&quot;@+id/textViewEmpty&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:text=&quot;Chưa có công việc nào.\nNhấn + để thêm công việc mới.&quot;&#10;        android:textSize=&quot;16sp&quot;&#10;        android:textAlignment=&quot;center&quot;&#10;        android:visibility=&quot;gone&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot; /&gt;&#10;&#10;    &lt;com.google.android.material.floatingactionbutton.FloatingActionButton&#10;        android:id=&quot;@+id/fabAdd&quot;&#10;        android:layout_width=&quot;wrap_content&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_margin=&quot;16dp&quot;&#10;        android:contentDescription=&quot;Thêm công việc&quot;&#10;        android:src=&quot;@android:drawable/ic_input_add&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot; /&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/item_task.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/item_task.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.cardview.widget.CardView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;wrap_content&quot;&#10;    android:layout_margin=&quot;8dp&quot;&#10;    app:cardCornerRadius=&quot;8dp&quot;&#10;    app:cardElevation=&quot;4dp&quot;&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:layout_width=&quot;match_parent&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;12dp&quot;&gt;&#10;&#10;        &lt;CheckBox&#10;            android:id=&quot;@+id/checkBoxCompleted&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center_vertical&quot; /&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginStart=&quot;8dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/textViewName&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Tên công việc&quot;&#10;                android:textSize=&quot;18sp&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textColor=&quot;@android:color/black&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/textViewDescription&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Mô tả&quot;&#10;                android:textSize=&quot;14sp&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:textColor=&quot;@android:color/darker_gray&quot; /&gt;&#10;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/textViewDueDate&quot;&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Hạn: 01/01/2025&quot;&#10;                android:textSize=&quot;12sp&quot;&#10;                android:layout_marginTop=&quot;4dp&quot;&#10;                android:textColor=&quot;@android:color/holo_red_dark&quot; /&gt;&#10;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/buttonDelete&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_gravity=&quot;center_vertical&quot;&#10;            android:background=&quot;?attr/selectableItemBackgroundBorderless&quot;&#10;            android:src=&quot;@android:drawable/ic_menu_delete&quot;&#10;            android:contentDescription=&quot;Xóa&quot; /&gt;&#10;&#10;    &lt;/LinearLayout&gt;&#10;&#10;&lt;/androidx.cardview.widget.CardView&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/menu/main_menu.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/menu/main_menu.xml" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;menu xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/menu_add&quot;&#10;        android:title=&quot;Thêm&quot;&#10;        android:icon=&quot;@android:drawable/ic_menu_add&quot;&#10;        app:showAsAction=&quot;ifRoom&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/menu_filter&quot;&#10;        android:title=&quot;Lọc&quot;&gt;&#10;        &lt;menu&gt;&#10;            &lt;item&#10;                android:id=&quot;@+id/menu_filter_all&quot;&#10;                android:title=&quot;Tất cả&quot; /&gt;&#10;            &lt;item&#10;                android:id=&quot;@+id/menu_filter_pending&quot;&#10;                android:title=&quot;Chưa hoàn thành&quot; /&gt;&#10;            &lt;item&#10;                android:id=&quot;@+id/menu_filter_completed&quot;&#10;                android:title=&quot;Đã hoàn thành&quot; /&gt;&#10;        &lt;/menu&gt;&#10;    &lt;/item&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/menu_delete_all&quot;&#10;        android:title=&quot;Xóa tất cả&quot; /&gt;&#10;&#10;    &lt;item&#10;        android:id=&quot;@+id/menu_about&quot;&#10;        android:title=&quot;Giới thiệu ứng dụng&quot; /&gt;&#10;&#10;&lt;/menu&gt;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values-night/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values-night/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.Stask&quot; parent=&quot;Theme.Material3.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Customize your dark theme here. --&gt;&#10;        &lt;!-- &lt;item name=&quot;colorPrimary&quot;&gt;@color/my_dark_primary&lt;/item&gt; --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.Stask&quot; parent=&quot;Theme.Material3.DayNight&quot;&gt;&#10;        &lt;!-- Customize your dark theme here. --&gt;&#10;        &lt;!-- &lt;item name=&quot;colorPrimary&quot;&gt;@color/my_dark_primary&lt;/item&gt; --&gt;&#10;    &lt;/style&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/strings.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/strings.xml" />
              <option name="originalContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;s-task&lt;/string&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources&gt;&#10;    &lt;string name=&quot;app_name&quot;&gt;S-Task&lt;/string&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/values/themes.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/values/themes.xml" />
              <option name="originalContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.Stask&quot; parent=&quot;Theme.Material3.DayNight.NoActionBar&quot;&gt;&#10;        &lt;!-- Customize your light theme here. --&gt;&#10;        &lt;!-- &lt;item name=&quot;colorPrimary&quot;&gt;@color/my_light_primary&lt;/item&gt; --&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.Stask&quot; parent=&quot;Base.Theme.Stask&quot; /&gt;&#10;&lt;/resources&gt;" />
              <option name="updatedContent" value="&lt;resources xmlns:tools=&quot;http://schemas.android.com/tools&quot;&gt;&#10;    &lt;!-- Base application theme. --&gt;&#10;    &lt;style name=&quot;Base.Theme.Stask&quot; parent=&quot;Theme.Material3.DayNight&quot;&gt;&#10;        &lt;!-- Customize your light theme here. --&gt;&#10;        &lt;!-- &lt;item name=&quot;colorPrimary&quot;&gt;@color/my_light_primary&lt;/item&gt; --&gt;&#10;    &lt;/style&gt;&#10;&#10;    &lt;style name=&quot;Theme.Stask&quot; parent=&quot;Base.Theme.Stask&quot; /&gt;&#10;&lt;/resources&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>